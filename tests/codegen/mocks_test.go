// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: mockio

package codegen

import (
	"reflect"

	"github.com/ovechkin-dm/mockio/v2/matchers"
)

func NewMockGreeter(ctrl *matchers.MockController) Greeter {
	tp := reflect.TypeOf(new(Greeter)).Elem()
	handler := ctrl.MockFactory.BuildHandler(ctrl.Env, tp)
	methodsMap := make(map[string]reflect.Method)
	for i := 0; i < tp.NumMethod(); i++ {
		method := tp.Method(i)
		methodsMap[method.Name] = method
	}
	mockVar := &MockGreeter{
		_handler:    handler,
		_methodsMap: methodsMap,
	}

	return mockVar
}

// MockGreeter is an autogenerated mock type for the Greeter type
type MockGreeter struct {
	_handler    matchers.Handler
	_methodsMap map[string]reflect.Method
}

func (mock *MockGreeter) Handler() matchers.Handler {
	return mock._handler
}

// Greet provides a mock function for the type MockGreeter

func (mock *MockGreeter) Greet(name string) string {
	methodType := mock._methodsMap["Greet"]
	args := []reflect.Value{
		reflect.ValueOf(name),
	}
	outs := mock._handler.Handle(methodType, args)
	r0, _ := outs[0].Interface().(string)

	return r0
}
